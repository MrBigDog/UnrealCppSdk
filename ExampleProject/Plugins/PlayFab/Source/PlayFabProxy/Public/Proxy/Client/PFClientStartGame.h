// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once
#include "OnlineBlueprintCallProxyBase.h"

#include "Core/PlayFabClientAPI.h"
#include "Core/PlayFabClientDataModels.h"
#include "Proxy/PlayFabClientBPDataModels.h"
#include "PFClientStartGame.generated.h"

UCLASS()
class PLAYFABPROXY_API UPFClientStartGame : public UOnlineBlueprintCallProxyBase
{
	GENERATED_UCLASS_BODY()
public:

	UPROPERTY(BlueprintAssignable)
	FBPClientStartGameResultDelegate OnSuccess;

	UPROPERTY(BlueprintAssignable)
	FBPClientStartGameResultDelegate OnFailure;
	
	// Start a new game server with a given configuration, add the current player and return the connection information.
	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject"), Category = "PlayFab|Client|Matchmaking")
	static UPFClientStartGame* StartGame(UObject* WorldContextObject, class APlayerController* PlayerController, const FString& InBuildVersion, const FString& InGameMode, const FString& InStatisticName, const FString& InCharacterId, const FString& InCustomCommandLineData);

	// UOnlineBlueprintCallProxyBase interface
	virtual void Activate() override;
	// End of UOnlineBlueprintCallProxyBase interface

private:

	PlayFab::ClientModels::FStartGameRequest Request;

	PlayFab::UPlayFabClientAPI::FStartGameDelegate	SuccessDelegate;
	PlayFab::FPlayFabErrorDelegate							ErrorDelegate;

	void OnSuccessCallback(const PlayFab::ClientModels::FStartGameResult& Result);
	void OnErrorCallback(const PlayFab::FPlayFabError& Error);
};
