// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once
#include "OnlineBlueprintCallProxyBase.h"

#include "Core/PlayFabServerAPI.h"
#include "Core/PlayFabServerDataModels.h"
#include "Proxy/PlayFabServerBPDataModels.h"
#include "PFServerGetFriendsList.generated.h"

UCLASS()
class PLAYFABPROXY_API UPFServerGetFriendsList : public UOnlineBlueprintCallProxyBase
{
	GENERATED_UCLASS_BODY()
public:

	UPROPERTY(BlueprintAssignable)
	FBPServerGetFriendsListResultDelegate OnSuccess;

	UPROPERTY(BlueprintAssignable)
	FBPServerGetFriendsListResultDelegate OnFailure;
	
	// Retrieves the current friends for the user with PlayFabId, constrained to users who have PlayFab accounts. Friends from linked accounts (Facebook, Steam) are also included. You may optionally exclude some linked services' friends.
	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject"), Category = "PlayFab|Server|Friend List Management")
	static UPFServerGetFriendsList* GetFriendsList(UObject* WorldContextObject, class APlayerController* PlayerController, const FString& InPlayFabId, const bool& InIncludeSteamFriends, const bool& InIncludeFacebookFriends, const FBPServerPlayerProfileViewConstraints& InProfileConstraints);

	// UOnlineBlueprintCallProxyBase interface
	virtual void Activate() override;
	// End of UOnlineBlueprintCallProxyBase interface

private:

	PlayFab::ServerModels::FGetFriendsListRequest Request;

	PlayFab::UPlayFabServerAPI::FGetFriendsListDelegate	SuccessDelegate;
	PlayFab::FPlayFabErrorDelegate							ErrorDelegate;

	void OnSuccessCallback(const PlayFab::ServerModels::FGetFriendsListResult& Result);
	void OnErrorCallback(const PlayFab::FPlayFabError& Error);
};
