// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!

#include "PFAdminGetPolicy.h"
#include "PlayFabProxy.h"
#include "PlayFab.h"

UPFAdminGetPolicy::UPFAdminGetPolicy(const FObjectInitializer& ObjectInitializer)
    : Super(ObjectInitializer)
    , SuccessDelegate(PlayFab::UPlayFabAdminAPI::FGetPolicyDelegate::CreateUObject(this, &ThisClass::OnSuccessCallback))
{
}

UPFAdminGetPolicy* UPFAdminGetPolicy::GetPolicy(class APlayerController* PlayerController, const FBPAdminGetPolicyRequest& InGetPolicyRequest)
{
    UPFAdminGetPolicy* Proxy = NewObject<UPFAdminGetPolicy>();
    Proxy->PlayerControllerWeakPtr = PlayerController;
    Proxy->Request = InGetPolicyRequest;
    
    return Proxy;
}

void UPFAdminGetPolicy::Activate()
{
    // grab the module, so we can get a valid pointer to the client API
    PlayFabAdminPtr AdminAPI = IPlayFabModuleInterface::Get().GetAdminAPI();

    bool CallResult = false;

    if(AdminAPI.IsValid())
    {
        CallResult = AdminAPI->GetPolicy(Request.Data, SuccessDelegate, ErrorDelegate);
    }

    if(CallResult == false)
    {
        OnFailure.Broadcast();
    }
}

void UPFAdminGetPolicy::OnSuccessCallback(const PlayFab::AdminModels::FGetPolicyResponse& Result)
{
    FBPAdminGetPolicyResponse BPResult;
     BPResult.Data = Result;
     OnSuccess.Broadcast(BPResult);
}
