// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!

#include "PFServerGetUserBans.h"
#include "PlayFabProxy.h"
#include "PlayFab.h"

UPFServerGetUserBans::UPFServerGetUserBans(const FObjectInitializer& ObjectInitializer)
    : Super(ObjectInitializer)
    , SuccessDelegate(PlayFab::UPlayFabServerAPI::FGetUserBansDelegate::CreateUObject(this, &ThisClass::OnSuccessCallback))
{
}

UPFServerGetUserBans* UPFServerGetUserBans::GetUserBans(class APlayerController* PlayerController, const FBPServerGetUserBansRequest& InGetUserBansRequest)
{
    UPFServerGetUserBans* Proxy = NewObject<UPFServerGetUserBans>();
    Proxy->PlayerControllerWeakPtr = PlayerController;
    Proxy->Request = InGetUserBansRequest;
    
    return Proxy;
}

void UPFServerGetUserBans::Activate()
{
    // grab the module, so we can get a valid pointer to the client API
    PlayFabServerPtr ServerAPI = IPlayFabModuleInterface::Get().GetServerAPI();

    bool CallResult = false;

    if (ServerAPI.IsValid())
    {
        CallResult = ServerAPI->GetUserBans(Request.Data, SuccessDelegate, ErrorDelegate);
    }

    if (CallResult == false)
        OnFailure.Broadcast();
}

void UPFServerGetUserBans::OnSuccessCallback(const PlayFab::ServerModels::FGetUserBansResult& Result)
{
    FBPServerGetUserBansResult BPResult;
     BPResult.Data = Result;
     OnSuccess.Broadcast(BPResult);
}
