// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once

#include "CoreMinimal.h"
#include "PlayFabProxyBaseModel.h"
#include "Core/PlayFabClientAPI.h"
#include "Core/PlayFabClientDataModels.h"
#include "Proxy/PlayFabClientBPDataModels.h"
#include "PFClientAcceptTrade.generated.h"

UCLASS(MinimalAPI)
class UPFClientAcceptTrade : public UPlayFabProxyBase
{
    GENERATED_UCLASS_BODY()
public:

    UPROPERTY(BlueprintAssignable)
        FBPClientAcceptTradeResponseDelegate OnSuccess;

    // Accepts an open trade (one that has not yet been accepted or cancelled), if the locally signed-in player is in the  allowed player list for the trade, or it is open to all players. If the call is successful, the offered and accepted items will be swapped  between the two players' inventories.
    UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true"), Category = "PlayFab|Client|Trading")
        static UPFClientAcceptTrade* AcceptTrade(class APlayerController* PlayerController, const FBPClientAcceptTradeRequest& InAcceptTradeRequest);

    // UOnlineBlueprintCallProxyBase interface
    virtual void Activate() override;
    // End of UOnlineBlueprintCallProxyBase interface

private:
    FBPClientAcceptTradeRequest Request;
    PlayFab::UPlayFabClientAPI::FAcceptTradeDelegate SuccessDelegate;

    void OnSuccessCallback(const PlayFab::ClientModels::FAcceptTradeResponse& Result);
};
