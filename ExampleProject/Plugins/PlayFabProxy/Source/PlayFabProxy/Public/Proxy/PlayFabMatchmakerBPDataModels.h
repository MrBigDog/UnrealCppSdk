// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once

#include "CoreMinimal.h"
#include "Core/PlayFabMatchmakerAPI.h"
#include "Core/PlayFabMatchmakerDataModels.h"
#include "PlayFabMatchmakerBPDataModels.generated.h"

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFMatchmakerProxyLibrary.MakeBPMatchmakerAuthUserRequest"))
struct FBPMatchmakerAuthUserRequest
{
    GENERATED_BODY()
public:
    FBPMatchmakerAuthUserRequest() {};
    FBPMatchmakerAuthUserRequest(PlayFab::MatchmakerModels::FAuthUserRequest InData) : Data(InData) {};
    PlayFab::MatchmakerModels::FAuthUserRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFMatchmakerProxyLibrary.BreakBPMatchmakerAuthUserResponse"))
struct FBPMatchmakerAuthUserResponse
{
    GENERATED_BODY()
public:
    FBPMatchmakerAuthUserResponse() {};
    FBPMatchmakerAuthUserResponse(PlayFab::MatchmakerModels::FAuthUserResponse InData) : Data(InData) {};
    PlayFab::MatchmakerModels::FAuthUserResponse Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFMatchmakerProxyLibrary.MakeBPMatchmakerItemInstance", HasNativeBreak = "PlayFabProxy.PFMatchmakerProxyLibrary.BreakBPMatchmakerItemInstance"))
struct FBPMatchmakerItemInstance
{
    GENERATED_BODY()
public:
    FBPMatchmakerItemInstance() {};
    FBPMatchmakerItemInstance(PlayFab::MatchmakerModels::FItemInstance InData) : Data(InData) {};
    PlayFab::MatchmakerModels::FItemInstance Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFMatchmakerProxyLibrary.MakeBPMatchmakerPlayerJoinedRequest"))
struct FBPMatchmakerPlayerJoinedRequest
{
    GENERATED_BODY()
public:
    FBPMatchmakerPlayerJoinedRequest() {};
    FBPMatchmakerPlayerJoinedRequest(PlayFab::MatchmakerModels::FPlayerJoinedRequest InData) : Data(InData) {};
    PlayFab::MatchmakerModels::FPlayerJoinedRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFMatchmakerProxyLibrary.BreakBPMatchmakerPlayerJoinedResponse"))
struct FBPMatchmakerPlayerJoinedResponse
{
    GENERATED_BODY()
public:
    FBPMatchmakerPlayerJoinedResponse() {};
    FBPMatchmakerPlayerJoinedResponse(PlayFab::MatchmakerModels::FPlayerJoinedResponse InData) : Data(InData) {};
    PlayFab::MatchmakerModels::FPlayerJoinedResponse Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFMatchmakerProxyLibrary.MakeBPMatchmakerPlayerLeftRequest"))
struct FBPMatchmakerPlayerLeftRequest
{
    GENERATED_BODY()
public:
    FBPMatchmakerPlayerLeftRequest() {};
    FBPMatchmakerPlayerLeftRequest(PlayFab::MatchmakerModels::FPlayerLeftRequest InData) : Data(InData) {};
    PlayFab::MatchmakerModels::FPlayerLeftRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFMatchmakerProxyLibrary.BreakBPMatchmakerPlayerLeftResponse"))
struct FBPMatchmakerPlayerLeftResponse
{
    GENERATED_BODY()
public:
    FBPMatchmakerPlayerLeftResponse() {};
    FBPMatchmakerPlayerLeftResponse(PlayFab::MatchmakerModels::FPlayerLeftResponse InData) : Data(InData) {};
    PlayFab::MatchmakerModels::FPlayerLeftResponse Data;
};

UENUM(BlueprintType)
enum class EBPMatchmakerRegion : uint8
{
    Region_USCentral UMETA(DisplayName = "USCentral"),
    Region_USEast UMETA(DisplayName = "USEast"),
    Region_EUWest UMETA(DisplayName = "EUWest"),
    Region_Singapore UMETA(DisplayName = "Singapore"),
    Region_Japan UMETA(DisplayName = "Japan"),
    Region_Brazil UMETA(DisplayName = "Brazil"),
    Region_Australia UMETA(DisplayName = "Australia")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFMatchmakerProxyLibrary.MakeBPMatchmakerStartGameRequest"))
struct FBPMatchmakerStartGameRequest
{
    GENERATED_BODY()
public:
    FBPMatchmakerStartGameRequest() {};
    FBPMatchmakerStartGameRequest(PlayFab::MatchmakerModels::FStartGameRequest InData) : Data(InData) {};
    PlayFab::MatchmakerModels::FStartGameRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFMatchmakerProxyLibrary.BreakBPMatchmakerStartGameResponse"))
struct FBPMatchmakerStartGameResponse
{
    GENERATED_BODY()
public:
    FBPMatchmakerStartGameResponse() {};
    FBPMatchmakerStartGameResponse(PlayFab::MatchmakerModels::FStartGameResponse InData) : Data(InData) {};
    PlayFab::MatchmakerModels::FStartGameResponse Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFMatchmakerProxyLibrary.MakeBPMatchmakerUserInfoRequest"))
struct FBPMatchmakerUserInfoRequest
{
    GENERATED_BODY()
public:
    FBPMatchmakerUserInfoRequest() {};
    FBPMatchmakerUserInfoRequest(PlayFab::MatchmakerModels::FUserInfoRequest InData) : Data(InData) {};
    PlayFab::MatchmakerModels::FUserInfoRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFMatchmakerProxyLibrary.BreakBPMatchmakerUserInfoResponse"))
struct FBPMatchmakerUserInfoResponse
{
    GENERATED_BODY()
public:
    FBPMatchmakerUserInfoResponse() {};
    FBPMatchmakerUserInfoResponse(PlayFab::MatchmakerModels::FUserInfoResponse InData) : Data(InData) {};
    PlayFab::MatchmakerModels::FUserInfoResponse Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFMatchmakerProxyLibrary.MakeBPMatchmakerVirtualCurrencyRechargeTime", HasNativeBreak = "PlayFabProxy.PFMatchmakerProxyLibrary.BreakBPMatchmakerVirtualCurrencyRechargeTime"))
struct FBPMatchmakerVirtualCurrencyRechargeTime
{
    GENERATED_BODY()
public:
    FBPMatchmakerVirtualCurrencyRechargeTime() {};
    FBPMatchmakerVirtualCurrencyRechargeTime(PlayFab::MatchmakerModels::FVirtualCurrencyRechargeTime InData) : Data(InData) {};
    PlayFab::MatchmakerModels::FVirtualCurrencyRechargeTime Data;
};

DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPMatchmakerAuthUserResponseDelegate, const FBPMatchmakerAuthUserResponse&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPMatchmakerPlayerJoinedResponseDelegate, const FBPMatchmakerPlayerJoinedResponse&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPMatchmakerPlayerLeftResponseDelegate, const FBPMatchmakerPlayerLeftResponse&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPMatchmakerStartGameResponseDelegate, const FBPMatchmakerStartGameResponse&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPMatchmakerUserInfoResponseDelegate, const FBPMatchmakerUserInfoResponse&, Result);

