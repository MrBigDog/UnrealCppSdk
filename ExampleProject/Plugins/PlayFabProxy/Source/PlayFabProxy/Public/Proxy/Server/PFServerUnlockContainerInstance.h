// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once

#include "CoreMinimal.h"
#include "PlayFabProxyBaseModel.h"
#include "Core/PlayFabServerAPI.h"
#include "Core/PlayFabServerDataModels.h"
#include "Proxy/PlayFabServerBPDataModels.h"
#include "PFServerUnlockContainerInstance.generated.h"

UCLASS(MinimalAPI)
class UPFServerUnlockContainerInstance : public UPlayFabProxyBase
{
    GENERATED_UCLASS_BODY()
public:

    UPROPERTY(BlueprintAssignable)
        FBPServerUnlockContainerItemResultDelegate OnSuccess;

    // Opens a specific container (ContainerItemInstanceId), with a specific key (KeyItemInstanceId, when required), and returns the contents of the opened container. If the container (and key when relevant) are consumable (RemainingUses > 0), their RemainingUses will be decremented, consistent with the operation of ConsumeItem.
    UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true"), Category = "PlayFab|Server|Player Item Management")
        static UPFServerUnlockContainerInstance* UnlockContainerInstance(class APlayerController* PlayerController, const FBPServerUnlockContainerInstanceRequest& InUnlockContainerInstanceRequest);

    // UOnlineBlueprintCallProxyBase interface
    virtual void Activate() override;
    // End of UOnlineBlueprintCallProxyBase interface

private:
    FBPServerUnlockContainerInstanceRequest Request;
    PlayFab::UPlayFabServerAPI::FUnlockContainerInstanceDelegate SuccessDelegate;

    void OnSuccessCallback(const PlayFab::ServerModels::FUnlockContainerItemResult& Result);
};
