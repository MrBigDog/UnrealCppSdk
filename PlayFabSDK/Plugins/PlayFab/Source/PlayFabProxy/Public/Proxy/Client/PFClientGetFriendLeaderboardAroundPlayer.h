// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once
#include "OnlineBlueprintCallProxyBase.h"

#include "Core/PlayFabClientAPI.h"
#include "Core/PlayFabClientDataModels.h"
#include "Proxy/PlayFabClientBPDataModels.h"
#include "PFClientGetFriendLeaderboardAroundPlayer.generated.h"

UCLASS()
class PLAYFABPROXY_API UPFClientGetFriendLeaderboardAroundPlayer : public UOnlineBlueprintCallProxyBase
{
	GENERATED_UCLASS_BODY()
public:

	UPROPERTY(BlueprintAssignable)
	FBPClientGetFriendLeaderboardAroundPlayerResultDelegate OnSuccess;

	UPROPERTY(BlueprintAssignable)
	FBPClientGetFriendLeaderboardAroundPlayerResultDelegate OnFailure;
	
	// Retrieves a list of ranked friends of the current player for the given statistic, centered on the requested PlayFab user. If PlayFabId is empty or null will return currently logged in user.
	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject"), Category = "PlayFab|Client|Player Data Management")
	static UPFClientGetFriendLeaderboardAroundPlayer* GetFriendLeaderboardAroundPlayer(UObject* WorldContextObject, class APlayerController* PlayerController, const FString& InStatisticName, const int32& InMaxResultsCount, const FString& InPlayFabId, const bool& InIncludeSteamFriends, const bool& InIncludeFacebookFriends, const int32& InVersion, const bool& InUseSpecificVersion);

	// UOnlineBlueprintCallProxyBase interface
	virtual void Activate() override;
	// End of UOnlineBlueprintCallProxyBase interface

private:

	PlayFab::ClientModels::FGetFriendLeaderboardAroundPlayerRequest Request;

	PlayFab::UPlayFabClientAPI::FGetFriendLeaderboardAroundPlayerDelegate	SuccessDelegate;
	PlayFab::FPlayFabErrorDelegate							ErrorDelegate;

	void OnSuccessCallback(const PlayFab::ClientModels::FGetFriendLeaderboardAroundPlayerResult& Result);
	void OnErrorCallback(const PlayFab::FPlayFabError& Error);
};
