// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once

#include "Core/PlayFabMatchmakerAPI.h"
#include "Core/PlayFabMatchmakerDataModels.h"
#include "PlayFabMatchmakerBPDataModels.h"
#include "PlayFabMatchmakerBPLibrary.generated.h"

UCLASS()
class UPFMatchmakerProxyLibrary : public UBlueprintFunctionLibrary
{
	GENERATED_BODY()

	public:

	
	UFUNCTION(BlueprintPure, Category = "PlayFab|Matchmaker", meta = (NativeBreakFunc))
	static void BreakBPMatchmakerAuthUserRequest(
		const FBPMatchmakerAuthUserRequest& In
        ,FString& OutAuthorizationTicket
	);
	
	UFUNCTION(BlueprintPure, Category = "PlayFab|Matchmaker", meta = (NativeBreakFunc))
	static void BreakBPMatchmakerAuthUserResponse(
		const FBPMatchmakerAuthUserResponse& In
        ,bool& OutAuthorized
        ,FString& OutPlayFabId
	);
	
	UFUNCTION(BlueprintPure, Category = "PlayFab|Matchmaker", meta = (NativeBreakFunc))
	static void BreakBPMatchmakerDeregisterGameRequest(
		const FBPMatchmakerDeregisterGameRequest& In
        ,FString& OutLobbyId
	);
	
	UFUNCTION(BlueprintPure, Category = "PlayFab|Matchmaker", meta = (NativeBreakFunc))
	static void BreakBPMatchmakerDeregisterGameResponse(
		const FBPMatchmakerDeregisterGameResponse& In
	);
	
	UFUNCTION(BlueprintPure, Category = "PlayFab|Matchmaker", meta = (NativeBreakFunc))
	static void BreakBPMatchmakerItemInstance(
		const FBPMatchmakerItemInstance& In
        ,FString& OutItemId
        ,FString& OutItemInstanceId
        ,FString& OutItemClass
        ,FDateTime& OutPurchaseDate
        ,FDateTime& OutExpiration
        ,int32& OutRemainingUses
        ,int32& OutUsesIncrementedBy
        ,FString& OutAnnotation
        ,FString& OutCatalogVersion
        ,FString& OutBundleParent
        ,FString& OutDisplayName
        ,FString& OutUnitCurrency
        ,int32& OutUnitPrice
        ,TArray<FString>& OutBundleContents
	);
	
	UFUNCTION(BlueprintPure, Category = "PlayFab|Matchmaker", meta = (NativeBreakFunc))
	static void BreakBPMatchmakerPlayerJoinedRequest(
		const FBPMatchmakerPlayerJoinedRequest& In
        ,FString& OutLobbyId
        ,FString& OutPlayFabId
	);
	
	UFUNCTION(BlueprintPure, Category = "PlayFab|Matchmaker", meta = (NativeBreakFunc))
	static void BreakBPMatchmakerPlayerJoinedResponse(
		const FBPMatchmakerPlayerJoinedResponse& In
	);
	
	UFUNCTION(BlueprintPure, Category = "PlayFab|Matchmaker", meta = (NativeBreakFunc))
	static void BreakBPMatchmakerPlayerLeftRequest(
		const FBPMatchmakerPlayerLeftRequest& In
        ,FString& OutLobbyId
        ,FString& OutPlayFabId
	);
	
	UFUNCTION(BlueprintPure, Category = "PlayFab|Matchmaker", meta = (NativeBreakFunc))
	static void BreakBPMatchmakerPlayerLeftResponse(
		const FBPMatchmakerPlayerLeftResponse& In
	);
	
	UFUNCTION(BlueprintPure, Category = "PlayFab|Matchmaker", meta = (NativeBreakFunc))
	static void BreakBPMatchmakerRegion(
		const FBPMatchmakerRegion& In
	);
	
	UFUNCTION(BlueprintPure, Category = "PlayFab|Matchmaker", meta = (NativeBreakFunc))
	static void BreakBPMatchmakerRegisterGameRequest(
		const FBPMatchmakerRegisterGameRequest& In
        ,FString& OutLobbyId
        ,FString& OutServerHost
        ,FString& OutServerPort
        ,FString& OutBuild
        ,FString& OutGameMode
	);
	
	UFUNCTION(BlueprintPure, Category = "PlayFab|Matchmaker", meta = (NativeBreakFunc))
	static void BreakBPMatchmakerRegisterGameResponse(
		const FBPMatchmakerRegisterGameResponse& In
        ,FString& OutLobbyId
	);
	
	UFUNCTION(BlueprintPure, Category = "PlayFab|Matchmaker", meta = (NativeBreakFunc))
	static void BreakBPMatchmakerStartGameRequest(
		const FBPMatchmakerStartGameRequest& In
        ,FString& OutBuild
        ,FString& OutGameMode
        ,FString& OutCustomCommandLineData
        ,FString& OutExternalMatchmakerEventEndpoint
	);
	
	UFUNCTION(BlueprintPure, Category = "PlayFab|Matchmaker", meta = (NativeBreakFunc))
	static void BreakBPMatchmakerStartGameResponse(
		const FBPMatchmakerStartGameResponse& In
        ,FString& OutGameID
        ,FString& OutServerHostname
        ,int32& OutServerPort
	);
	
	UFUNCTION(BlueprintPure, Category = "PlayFab|Matchmaker", meta = (NativeBreakFunc))
	static void BreakBPMatchmakerUserInfoRequest(
		const FBPMatchmakerUserInfoRequest& In
        ,FString& OutPlayFabId
        ,int32& OutMinCatalogVersion
	);
	
	UFUNCTION(BlueprintPure, Category = "PlayFab|Matchmaker", meta = (NativeBreakFunc))
	static void BreakBPMatchmakerUserInfoResponse(
		const FBPMatchmakerUserInfoResponse& In
        ,FString& OutPlayFabId
        ,FString& OutUsername
        ,FString& OutTitleDisplayName
        ,TArray<FBPMatchmakerItemInstance>& OutInventory
        ,bool& OutIsDeveloper
        ,FString& OutSteamId
	);
	
	UFUNCTION(BlueprintPure, Category = "PlayFab|Matchmaker", meta = (NativeBreakFunc))
	static void BreakBPMatchmakerVirtualCurrencyRechargeTime(
		const FBPMatchmakerVirtualCurrencyRechargeTime& In
        ,int32& OutSecondsToRecharge
        ,FDateTime& OutRechargeTime
        ,int32& OutRechargeMax
	);
	


};
