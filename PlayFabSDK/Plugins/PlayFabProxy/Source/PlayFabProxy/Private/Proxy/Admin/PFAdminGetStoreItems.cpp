// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!

#include "PFAdminGetStoreItems.h"
#include "PlayFabProxy.h"
#include "PlayFab.h"

UPFAdminGetStoreItems::UPFAdminGetStoreItems(const FObjectInitializer& ObjectInitializer)
    : Super(ObjectInitializer)
    , SuccessDelegate(PlayFab::UPlayFabAdminAPI::FGetStoreItemsDelegate::CreateUObject(this, &ThisClass::OnSuccessCallback))
{
}

UPFAdminGetStoreItems* UPFAdminGetStoreItems::GetStoreItems(class APlayerController* PlayerController, const FBPAdminGetStoreItemsRequest& InGetStoreItemsRequest)
{
    UPFAdminGetStoreItems* Proxy = NewObject<UPFAdminGetStoreItems>();
    Proxy->PlayerControllerWeakPtr = PlayerController;
    Proxy->Request = InGetStoreItemsRequest;
    
    return Proxy;
}

void UPFAdminGetStoreItems::Activate()
{
    // grab the module, so we can get a valid pointer to the client API
    PlayFabAdminPtr AdminAPI = IPlayFabModuleInterface::Get().GetAdminAPI();

    bool CallResult = false;

    if(AdminAPI.IsValid())
    {
        CallResult = AdminAPI->GetStoreItems(Request.Data, SuccessDelegate, ErrorDelegate);
    }

    if(CallResult == false)
    {
        OnFailure.Broadcast();
    }
}

void UPFAdminGetStoreItems::OnSuccessCallback(const PlayFab::AdminModels::FGetStoreItemsResult& Result)
{
    FBPAdminGetStoreItemsResult BPResult;
     BPResult.Data = Result;
     OnSuccess.Broadcast(BPResult);
}
