// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!

#include "PFAdminResetCharacterStatistics.h"
#include "PlayFabProxy.h"
#include "PlayFab.h"

UPFAdminResetCharacterStatistics::UPFAdminResetCharacterStatistics(const FObjectInitializer& ObjectInitializer)
    : Super(ObjectInitializer)
    , SuccessDelegate(PlayFab::UPlayFabAdminAPI::FResetCharacterStatisticsDelegate::CreateUObject(this, &ThisClass::OnSuccessCallback))
{
}

UPFAdminResetCharacterStatistics* UPFAdminResetCharacterStatistics::ResetCharacterStatistics(class APlayerController* PlayerController, const FBPAdminResetCharacterStatisticsRequest& InResetCharacterStatisticsRequest)
{
    UPFAdminResetCharacterStatistics* Proxy = NewObject<UPFAdminResetCharacterStatistics>();
    Proxy->PlayerControllerWeakPtr = PlayerController;
    Proxy->Request = InResetCharacterStatisticsRequest;
    
    return Proxy;
}

void UPFAdminResetCharacterStatistics::Activate()
{
    // grab the module, so we can get a valid pointer to the client API
    PlayFabAdminPtr AdminAPI = IPlayFabModuleInterface::Get().GetAdminAPI();

    bool CallResult = false;

    if(AdminAPI.IsValid())
    {
        CallResult = AdminAPI->ResetCharacterStatistics(Request.Data, SuccessDelegate, ErrorDelegate);
    }

    if(CallResult == false)
    {
        OnFailure.Broadcast();
    }
}

void UPFAdminResetCharacterStatistics::OnSuccessCallback(const PlayFab::AdminModels::FResetCharacterStatisticsResult& Result)
{
    OnSuccess.Broadcast();
}
