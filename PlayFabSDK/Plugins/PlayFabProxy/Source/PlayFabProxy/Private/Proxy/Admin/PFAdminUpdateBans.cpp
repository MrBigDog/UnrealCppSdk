// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!

#include "PFAdminUpdateBans.h"
#include "PlayFabProxy.h"
#include "PlayFab.h"

UPFAdminUpdateBans::UPFAdminUpdateBans(const FObjectInitializer& ObjectInitializer)
    : Super(ObjectInitializer)
    , SuccessDelegate(PlayFab::UPlayFabAdminAPI::FUpdateBansDelegate::CreateUObject(this, &ThisClass::OnSuccessCallback))
{
}

UPFAdminUpdateBans* UPFAdminUpdateBans::UpdateBans(class APlayerController* PlayerController, const FBPAdminUpdateBansRequest& InUpdateBansRequest)
{
    UPFAdminUpdateBans* Proxy = NewObject<UPFAdminUpdateBans>();
    Proxy->PlayerControllerWeakPtr = PlayerController;
    Proxy->Request = InUpdateBansRequest;
    
    return Proxy;
}

void UPFAdminUpdateBans::Activate()
{
    // grab the module, so we can get a valid pointer to the client API
    PlayFabAdminPtr AdminAPI = IPlayFabModuleInterface::Get().GetAdminAPI();

    bool CallResult = false;

    if (AdminAPI.IsValid())
    {
        CallResult = AdminAPI->UpdateBans(Request.Data, SuccessDelegate, ErrorDelegate);
    }

    if (CallResult == false)
        OnFailure.Broadcast();
}

void UPFAdminUpdateBans::OnSuccessCallback(const PlayFab::AdminModels::FUpdateBansResult& Result)
{
    FBPAdminUpdateBansResult BPResult;
     BPResult.Data = Result;
     OnSuccess.Broadcast(BPResult);
}
