// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!

#include "PFClientGetLeaderboard.h"
#include "PlayFabProxy.h"
#include "PlayFab.h"

UPFClientGetLeaderboard::UPFClientGetLeaderboard(const FObjectInitializer& ObjectInitializer)
    : Super(ObjectInitializer)
    , SuccessDelegate(PlayFab::UPlayFabClientAPI::FGetLeaderboardDelegate::CreateUObject(this, &ThisClass::OnSuccessCallback))
{
}

UPFClientGetLeaderboard* UPFClientGetLeaderboard::GetLeaderboard(class APlayerController* PlayerController, const FBPClientGetLeaderboardRequest& InGetLeaderboardRequest)
{
    UPFClientGetLeaderboard* Proxy = NewObject<UPFClientGetLeaderboard>();
    Proxy->PlayerControllerWeakPtr = PlayerController;
    Proxy->Request = InGetLeaderboardRequest;
    
    return Proxy;
}

void UPFClientGetLeaderboard::Activate()
{
    // grab the module, so we can get a valid pointer to the client API
    PlayFabClientPtr ClientAPI = IPlayFabModuleInterface::Get().GetClientAPI();

    bool CallResult = false;

    if (ClientAPI.IsValid())
    {
        CallResult = ClientAPI->GetLeaderboard(Request.Data, SuccessDelegate, ErrorDelegate);
    }

    if (CallResult == false)
        OnFailure.Broadcast();
}

void UPFClientGetLeaderboard::OnSuccessCallback(const PlayFab::ClientModels::FGetLeaderboardResult& Result)
{
    FBPClientGetLeaderboardResult BPResult;
     BPResult.Data = Result;
     OnSuccess.Broadcast(BPResult);
}
