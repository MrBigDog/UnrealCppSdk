// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!

#include "PFClientLinkWindowsHello.h"
#include "PlayFabProxy.h"
#include "PlayFab.h"

UPFClientLinkWindowsHello::UPFClientLinkWindowsHello(const FObjectInitializer& ObjectInitializer)
    : Super(ObjectInitializer)
    , SuccessDelegate(PlayFab::UPlayFabClientAPI::FLinkWindowsHelloDelegate::CreateUObject(this, &ThisClass::OnSuccessCallback))
{
}

UPFClientLinkWindowsHello* UPFClientLinkWindowsHello::LinkWindowsHello(class APlayerController* PlayerController, const FBPClientLinkWindowsHelloAccountRequest& InLinkWindowsHelloAccountRequest)
{
    UPFClientLinkWindowsHello* Proxy = NewObject<UPFClientLinkWindowsHello>();
    Proxy->PlayerControllerWeakPtr = PlayerController;
    Proxy->Request = InLinkWindowsHelloAccountRequest;
    
    return Proxy;
}

void UPFClientLinkWindowsHello::Activate()
{
    // grab the module, so we can get a valid pointer to the client API
    PlayFabClientPtr ClientAPI = IPlayFabModuleInterface::Get().GetClientAPI();

    bool CallResult = false;

    if(ClientAPI.IsValid())
    {
        CallResult = ClientAPI->LinkWindowsHello(Request.Data, SuccessDelegate, ErrorDelegate);
    }

    if(CallResult == false)
    {
        OnFailure.Broadcast();
    }
}

void UPFClientLinkWindowsHello::OnSuccessCallback(const PlayFab::ClientModels::FLinkWindowsHelloAccountResponse& Result)
{
    OnSuccess.Broadcast();
}
