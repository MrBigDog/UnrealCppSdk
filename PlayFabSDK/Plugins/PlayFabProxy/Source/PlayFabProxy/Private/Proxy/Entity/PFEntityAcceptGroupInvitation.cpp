// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!

#include "PFEntityAcceptGroupInvitation.h"
#include "PlayFabProxy.h"
#include "PlayFab.h"

UPFEntityAcceptGroupInvitation::UPFEntityAcceptGroupInvitation(const FObjectInitializer& ObjectInitializer)
    : Super(ObjectInitializer)
    , SuccessDelegate(PlayFab::UPlayFabEntityAPI::FAcceptGroupInvitationDelegate::CreateUObject(this, &ThisClass::OnSuccessCallback))
{
}

UPFEntityAcceptGroupInvitation* UPFEntityAcceptGroupInvitation::AcceptGroupInvitation(class APlayerController* PlayerController, const FBPEntityAcceptGroupInvitationRequest& InAcceptGroupInvitationRequest)
{
    UPFEntityAcceptGroupInvitation* Proxy = NewObject<UPFEntityAcceptGroupInvitation>();
    Proxy->PlayerControllerWeakPtr = PlayerController;
    Proxy->Request = InAcceptGroupInvitationRequest;
    
    return Proxy;
}

void UPFEntityAcceptGroupInvitation::Activate()
{
    // grab the module, so we can get a valid pointer to the client API
    PlayFabEntityPtr EntityAPI = IPlayFabModuleInterface::Get().GetEntityAPI();

    bool CallResult = false;

    if (EntityAPI.IsValid())
    {
        CallResult = EntityAPI->AcceptGroupInvitation(Request.Data, SuccessDelegate, ErrorDelegate);
    }

    if (CallResult == false)
        OnFailure.Broadcast();
}

void UPFEntityAcceptGroupInvitation::OnSuccessCallback(const PlayFab::EntityModels::FEmptyResult& Result)
{
    OnSuccess.Broadcast();
}
