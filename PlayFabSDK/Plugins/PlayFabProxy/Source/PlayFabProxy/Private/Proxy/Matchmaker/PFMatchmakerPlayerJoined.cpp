// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!

#include "PFMatchmakerPlayerJoined.h"
#include "PlayFabProxy.h"
#include "PlayFab.h"

UPFMatchmakerPlayerJoined::UPFMatchmakerPlayerJoined(const FObjectInitializer& ObjectInitializer)
    : Super(ObjectInitializer)
    , SuccessDelegate(PlayFab::UPlayFabMatchmakerAPI::FPlayerJoinedDelegate::CreateUObject(this, &ThisClass::OnSuccessCallback))
{
}

UPFMatchmakerPlayerJoined* UPFMatchmakerPlayerJoined::PlayerJoined(class APlayerController* PlayerController, const FBPMatchmakerPlayerJoinedRequest& InPlayerJoinedRequest)
{
    UPFMatchmakerPlayerJoined* Proxy = NewObject<UPFMatchmakerPlayerJoined>();
    Proxy->PlayerControllerWeakPtr = PlayerController;
    Proxy->Request = InPlayerJoinedRequest;
    
    return Proxy;
}

void UPFMatchmakerPlayerJoined::Activate()
{
    // grab the module, so we can get a valid pointer to the client API
    PlayFabMatchmakerPtr MatchmakerAPI = IPlayFabModuleInterface::Get().GetMatchmakerAPI();

    bool CallResult = false;

    if (MatchmakerAPI.IsValid())
    {
        CallResult = MatchmakerAPI->PlayerJoined(Request.Data, SuccessDelegate, ErrorDelegate);
    }

    if (CallResult == false)
        OnFailure.Broadcast();
}

void UPFMatchmakerPlayerJoined::OnSuccessCallback(const PlayFab::MatchmakerModels::FPlayerJoinedResponse& Result)
{
    OnSuccess.Broadcast();
}
