// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!

#include "PFServerMoveItemToUserFromCharacter.h"
#include "PlayFabProxy.h"
#include "PlayFab.h"

UPFServerMoveItemToUserFromCharacter::UPFServerMoveItemToUserFromCharacter(const FObjectInitializer& ObjectInitializer)
    : Super(ObjectInitializer)
    , SuccessDelegate(PlayFab::UPlayFabServerAPI::FMoveItemToUserFromCharacterDelegate::CreateUObject(this, &ThisClass::OnSuccessCallback))
{
}

UPFServerMoveItemToUserFromCharacter* UPFServerMoveItemToUserFromCharacter::MoveItemToUserFromCharacter(class APlayerController* PlayerController, const FBPServerMoveItemToUserFromCharacterRequest& InMoveItemToUserFromCharacterRequest)
{
    UPFServerMoveItemToUserFromCharacter* Proxy = NewObject<UPFServerMoveItemToUserFromCharacter>();
    Proxy->PlayerControllerWeakPtr = PlayerController;
    Proxy->Request = InMoveItemToUserFromCharacterRequest;
    
    return Proxy;
}

void UPFServerMoveItemToUserFromCharacter::Activate()
{
    // grab the module, so we can get a valid pointer to the client API
    PlayFabServerPtr ServerAPI = IPlayFabModuleInterface::Get().GetServerAPI();

    bool CallResult = false;

    if (ServerAPI.IsValid())
    {
        CallResult = ServerAPI->MoveItemToUserFromCharacter(Request.Data, SuccessDelegate, ErrorDelegate);
    }

    if (CallResult == false)
        OnFailure.Broadcast();
}

void UPFServerMoveItemToUserFromCharacter::OnSuccessCallback(const PlayFab::ServerModels::FMoveItemToUserFromCharacterResult& Result)
{
    OnSuccess.Broadcast();
}
