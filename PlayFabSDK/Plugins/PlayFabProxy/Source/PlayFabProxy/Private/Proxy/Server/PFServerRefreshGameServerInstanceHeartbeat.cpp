// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!

#include "PFServerRefreshGameServerInstanceHeartbeat.h"
#include "PlayFabProxy.h"
#include "PlayFab.h"

UPFServerRefreshGameServerInstanceHeartbeat::UPFServerRefreshGameServerInstanceHeartbeat(const FObjectInitializer& ObjectInitializer)
    : Super(ObjectInitializer)
    , SuccessDelegate(PlayFab::UPlayFabServerAPI::FRefreshGameServerInstanceHeartbeatDelegate::CreateUObject(this, &ThisClass::OnSuccessCallback))
{
}

UPFServerRefreshGameServerInstanceHeartbeat* UPFServerRefreshGameServerInstanceHeartbeat::RefreshGameServerInstanceHeartbeat(class APlayerController* PlayerController, const FBPServerRefreshGameServerInstanceHeartbeatRequest& InRefreshGameServerInstanceHeartbeatRequest)
{
    UPFServerRefreshGameServerInstanceHeartbeat* Proxy = NewObject<UPFServerRefreshGameServerInstanceHeartbeat>();
    Proxy->PlayerControllerWeakPtr = PlayerController;
    Proxy->Request = InRefreshGameServerInstanceHeartbeatRequest;
    
    return Proxy;
}

void UPFServerRefreshGameServerInstanceHeartbeat::Activate()
{
    // grab the module, so we can get a valid pointer to the client API
    PlayFabServerPtr ServerAPI = IPlayFabModuleInterface::Get().GetServerAPI();

    bool CallResult = false;

    if (ServerAPI.IsValid())
    {
        CallResult = ServerAPI->RefreshGameServerInstanceHeartbeat(Request.Data, SuccessDelegate, ErrorDelegate);
    }

    if (CallResult == false)
        OnFailure.Broadcast();
}

void UPFServerRefreshGameServerInstanceHeartbeat::OnSuccessCallback(const PlayFab::ServerModels::FRefreshGameServerInstanceHeartbeatResult& Result)
{
    OnSuccess.Broadcast();
}
