// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once

#include "CoreMinimal.h"
#include "PlayFabProxyBaseModel.h"
#include "Core/PlayFabClientAPI.h"
#include "Core/PlayFabClientDataModels.h"
#include "Proxy/PlayFabClientBPDataModels.h"
#include "PFClientCancelTrade.generated.h"

UCLASS(MinimalAPI)
class UPFClientCancelTrade : public UPlayFabProxyBase
{
    GENERATED_UCLASS_BODY()
public:

    UPROPERTY(BlueprintAssignable)
        FBPClientCancelTradeResponseDelegate OnSuccess;

    // Cancels an open trade (one that has not yet been accepted or cancelled). Note that only the player who created the trade can cancel it via this API call, to prevent griefing of the trade system (cancelling trades in order to prevent other players from accepting them, for trades that can be claimed by more than one player).
    UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true"), Category = "PlayFab|Client|Trading")
        static UPFClientCancelTrade* CancelTrade(class APlayerController* PlayerController, const FBPClientCancelTradeRequest& InCancelTradeRequest);

    // UOnlineBlueprintCallProxyBase interface
    virtual void Activate() override;
    // End of UOnlineBlueprintCallProxyBase interface

private:
    FBPClientCancelTradeRequest Request;
    PlayFab::UPlayFabClientAPI::FCancelTradeDelegate SuccessDelegate;

    void OnSuccessCallback(const PlayFab::ClientModels::FCancelTradeResponse& Result);
};
