// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once

#include "CoreMinimal.h"
#include "PlayFabProxyBaseModel.h"
#include "Core/PlayFabClientAPI.h"
#include "Core/PlayFabClientDataModels.h"
#include "Proxy/PlayFabClientBPDataModels.h"
#include "PFClientLoginWithEmailAddress.generated.h"

UCLASS(MinimalAPI)
class UPFClientLoginWithEmailAddress : public UPlayFabProxyBase
{
    GENERATED_UCLASS_BODY()
public:

    UPROPERTY(BlueprintAssignable)
        FBPClientLoginResultDelegate OnSuccess;

    // Signs the user into the PlayFab account, returning a session identifier that can subsequently be used for API calls which require an authenticated user. Unlike most other login API calls, LoginWithEmailAddress does not permit the creation of new accounts via the CreateAccountFlag. Email addresses may be used to create accounts via RegisterPlayFabUser.
    UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true"), Category = "PlayFab|Client|Authentication")
        static UPFClientLoginWithEmailAddress* LoginWithEmailAddress(class APlayerController* PlayerController, const FBPClientLoginWithEmailAddressRequest& InLoginWithEmailAddressRequest);

    // UOnlineBlueprintCallProxyBase interface
    virtual void Activate() override;
    // End of UOnlineBlueprintCallProxyBase interface

private:
    FBPClientLoginWithEmailAddressRequest Request;
    PlayFab::UPlayFabClientAPI::FLoginWithEmailAddressDelegate SuccessDelegate;

    void OnSuccessCallback(const PlayFab::ClientModels::FLoginResult& Result);
};
