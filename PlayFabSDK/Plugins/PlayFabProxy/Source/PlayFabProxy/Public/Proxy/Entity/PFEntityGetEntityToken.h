// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once

#include "CoreMinimal.h"
#include "PlayFabProxyBaseModel.h"
#include "Core/PlayFabEntityAPI.h"
#include "Core/PlayFabEntityDataModels.h"
#include "Proxy/PlayFabEntityBPDataModels.h"
#include "PFEntityGetEntityToken.generated.h"

UCLASS(MinimalAPI)
class UPFEntityGetEntityToken : public UPlayFabProxyBase
{
    GENERATED_UCLASS_BODY()
public:

    UPROPERTY(BlueprintAssignable)
        FBPEntityGetEntityTokenResponseDelegate OnSuccess;

    // Method to exchange a legacy AuthenticationTicket or title SecretKey for an Entity Token or to refresh a still valid Entity Token.
    UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true"), Category = "PlayFab|Entity|Authentication")
        static UPFEntityGetEntityToken* GetEntityToken(class APlayerController* PlayerController, const FBPEntityGetEntityTokenRequest& InGetEntityTokenRequest);

    // UOnlineBlueprintCallProxyBase interface
    virtual void Activate() override;
    // End of UOnlineBlueprintCallProxyBase interface

private:
    FBPEntityGetEntityTokenRequest Request;
    PlayFab::UPlayFabEntityAPI::FGetEntityTokenDelegate SuccessDelegate;

    void OnSuccessCallback(const PlayFab::EntityModels::FGetEntityTokenResponse& Result);
};
