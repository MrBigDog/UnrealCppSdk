// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once

#include "CoreMinimal.h"
#include "PlayFabProxyBaseModel.h"
#include "Core/PlayFabServerAPI.h"
#include "Core/PlayFabServerDataModels.h"
#include "Proxy/PlayFabServerBPDataModels.h"
#include "PFServerUnlockContainerItem.generated.h"

UCLASS(MinimalAPI)
class UPFServerUnlockContainerItem : public UPlayFabProxyBase
{
    GENERATED_UCLASS_BODY()
public:

    UPROPERTY(BlueprintAssignable)
        FBPServerUnlockContainerItemResultDelegate OnSuccess;

    // Searches Player or Character inventory for any ItemInstance matching the given CatalogItemId, if necessary unlocks it using any appropriate key, and returns the contents of the opened container. If the container (and key when relevant) are consumable (RemainingUses > 0), their RemainingUses will be decremented, consistent with the operation of ConsumeItem.
    UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true"), Category = "PlayFab|Server|Player Item Management")
        static UPFServerUnlockContainerItem* UnlockContainerItem(class APlayerController* PlayerController, const FBPServerUnlockContainerItemRequest& InUnlockContainerItemRequest);

    // UOnlineBlueprintCallProxyBase interface
    virtual void Activate() override;
    // End of UOnlineBlueprintCallProxyBase interface

private:
    FBPServerUnlockContainerItemRequest Request;
    PlayFab::UPlayFabServerAPI::FUnlockContainerItemDelegate SuccessDelegate;

    void OnSuccessCallback(const PlayFab::ServerModels::FUnlockContainerItemResult& Result);
};
